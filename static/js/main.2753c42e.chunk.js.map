{"version":3,"sources":["components/Navbar/Navbar.js","components/Directory/SearchBar.js","components/Directory/EmployeeCard.js","utils/API.js","components/Directory/Directory.js","App.js","serviceWorker.js","index.js"],"names":["NavbarBTS","Navbar","collapseOnSelect","expand","bg","variant","SearchBar","props","className","htmlFor","size","value","search","onChange","handleInputChange","name","type","placeholder","id","onClick","handleOrderByAgeAsc","handleOrderByAgeDesc","EmployeeCard","filteredResults","map","result","Card","Row","Col","Image","src","picture","large","roundedCircle","Body","Title","first","last","Text","dob","age","location","country","city","phone","email","Footer","login","uuid","axios","get","Directory","state","results","event","target","searchedEmployeeList","filter","eName","toLowerCase","indexOf","setState","e","preventDefault","sortedArray","sort","a","b","API","then","res","data","catch","err","console","log","this","searchEmployee","CardDeck","Container","fluid","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2753c42e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction NavbarBTS() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t\r\n\t\t\t</Navbar>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default NavbarBTS;\r\n","import React from 'react';\r\nimport './Directory.css';\r\n\r\nexport default function SearchBar(props) {\r\n\treturn (\r\n\t\t<form className=\"Search-Bar-Form\">\r\n\t\t\t<div className=\"Search-Bar-Div\">\r\n\t\t\t\t<label htmlFor=\"search\">Search Directory:</label>\r\n\t\t\t\t<input className=\"Form-Input\" size=\"30\" value={props.search} onChange={props.handleInputChange} name=\"search\" type=\"text\" placeholder=\"Search For An Employee\" id=\"search\" />\r\n\r\n\t\t\t\t<button className=\"Form-BTN FBN-BTN\" onClick={props.handleOrderByAgeAsc}>\r\n\t\t\t\t\tOrder By Age <i className=\"fas fa-sort-up\"></i>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button className=\"Form-BTN FBN-BTN\" onClick={props.handleOrderByAgeDesc}>\r\n\t\t\t\t\tOrder By Age <i className=\"fas fa-sort-down\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Card, Row, Col, Image } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Directory.css';\r\n\r\nexport default function EmployeeCard(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.filteredResults.map((result) => (\r\n\t\t\t\t<Card className=\"Employee-Card\" key={result.login.uuid}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"IMG-Card-Col\">\r\n\t\t\t\t\t\t\t<Image src={result.picture.large} roundedCircle variant=\"top\" className=\"IMG-Card\" />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>{result.name.first + ' ' + result.name.last}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text className=\"Card-Text\">\r\n\t\t\t\t\t\t\t<b>Age: </b>\r\n\t\t\t\t\t\t\t{result.dob.age}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<Card.Text className=\"Card-Text\">\r\n\t\t\t\t\t\t\t<b>Country: </b>\r\n\t\t\t\t\t\t\t{result.location.country}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<Card.Text className=\"Card-Text\">\r\n\t\t\t\t\t\t\t<b>City: </b>\r\n\t\t\t\t\t\t\t{result.location.city}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<Card.Text className=\"Card-Text\">\r\n\t\t\t\t\t\t\t<b>Phone: </b>\r\n\t\t\t\t\t\t\t{result.phone}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t<Card.Text className=\"Card-Text\">\r\n\t\t\t\t\t\t\t<b>Email: </b>\r\n\t\t\t\t\t\t\t{result.email}\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t</Card>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n}\r\n","import axios from 'axios';\r\n\r\nconst BASEURL = 'https://randomuser.me/api/?results=300';\r\n\r\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\r\nexport default {\r\n\tpopulateEmployees: function () {\r\n\t\treturn axios.get(BASEURL);\r\n\t},\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CardDeck, Container } from 'react-bootstrap';\r\nimport SearchBar from './SearchBar';\r\nimport EmployeeCard from './EmployeeCard';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport API from '../../utils/API';\r\nimport './Directory.css';\r\n\r\nexport default class Directory extends Component {\r\n\tstate = {\r\n\t\tsearch: '',\r\n\t\tresults: [],\r\n\t\tfilteredResults: [],\r\n\t};\r\n\r\n\t// When this component mounts, it populates the page with the employee data from the API\r\n\tcomponentDidMount() {\r\n\t\tAPI.populateEmployees()\r\n\t\t\t.then((res) => this.setState({ results: res.data.results, filteredResults: res.data.results }))\r\n\t\t\t.catch((err) => console.log(err));\r\n\t}\r\n\r\n\thandleInputChange = (event) => {\r\n\t\tconst value = event.target.value;\r\n\t\tconst resultsArr = this.state.results;\r\n\t\t//Filtering the list to populate the new FilteredResults Array with names from the API that match what is being put in for the first name and last name using the OR operator\r\n\t\tconst searchedEmployeeList = resultsArr.filter((eName) => eName.name.first.toLowerCase().indexOf(value.toLowerCase()) !== -1 || eName.name.last.toLowerCase().indexOf(value.toLowerCase()) !== -1);\r\n\t\tthis.setState({\r\n\t\t\tfilteredResults: searchedEmployeeList,\r\n\t\t});\r\n\t};\r\n\r\n\thandleOrderByAgeDesc = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//Orders age by descending order\r\n\t\tconst unSortedArray = this.state.filteredResults;\r\n\t\tconst sortedArray = unSortedArray.sort(function (a, b) {\r\n\t\t\treturn b.dob.age - a.dob.age;\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tfilteredResults: sortedArray,\r\n\t\t});\r\n\t};\r\n\r\n\thandleOrderByAgeAsc = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//Orders age by descending order\r\n\t\tconst unSortedArray = this.state.filteredResults;\r\n\t\tconst sortedArray = unSortedArray.sort(function (a, b) {\r\n\t\t\treturn a.dob.age - b.dob.age;\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tfilteredResults: sortedArray,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Search-Result-Container\">\r\n\t\t\t\t<SearchBar handleInputChange={this.handleInputChange} searchEmployee={this.searchEmployee} handleOrderByAgeDesc={this.handleOrderByAgeDesc} handleOrderByAgeAsc={this.handleOrderByAgeAsc} />\r\n\t\t\t\t<CardDeck>\r\n\t\t\t\t\t<Container className=\"Card-Container\" fluid>\r\n\t\t\t\t\t\t<EmployeeCard filteredResults={this.state.filteredResults} />;\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</CardDeck>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport NavbarBTS from './components/Navbar/Navbar';\r\nimport Directory from './components/Directory/Directory';\r\n// import Footer from './components/Footer/Footer';\r\nimport {} from 'react-bootstrap';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<NavbarBTS />\r\n\t\t\t<Directory />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    \r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n     \r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n      \r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n    \r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        \r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n        \r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n           \r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}